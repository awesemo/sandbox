##############################################################################
# Sonata News
# more information can be found here https://sonata-project.org/bundles/news
##############################################################################
sonata_news:
    class:
        post:       AppBundle\Entity\News\Post
        comment:    AppBundle\Entity\News\Comment
        tag:        AppBundle\Entity\Classification\Tag
        collection: AppBundle\Entity\Classification\Collection
        user:       AppBundle\Entity\User\User
        media:      AppBundle\Entity\Media\Media

    admin:
        post:
            class:        AppBundle\Admin\News\PostAdmin
            controller:   RzNewsPageBundle:PostAdmin

    title:        %sonata_news.blog_title%
    link:         %sonata_news.blog_link%
    description:  %sonata_news.blog_description%
    salt:         %sonata_news.salt%

    # permalink_generator: sonata.news.permalink.category # /party/new-year
    permalink_generator: sonata.news.permalink.date # /2011/12/31/new-year

    # comment options
    comment:
        notification:
            emails:   %sonata_news.comment.emails%
            from:     %sonata_news.comment.email_from%
            template: 'SonataNewsBundle:Mail:comment_notification.txt.twig'

##############################################################################
# News Doctrine
# Enable Doctrine to map the provided entities
##############################################################################
doctrine:
    orm:
        entity_managers:
            default:
                mappings:
                    SonataNewsBundle: ~


###############################################################################
# RzNews
###############################################################################
rz_news:
  manager_class:
    orm:
      post:       'Rz\NewsBundle\Entity\PostManager'

  admin:
    post_has_category:
        class:        Rz\NewsPageBundle\Admin\PostHasCategoryAdmin
        controller:   RzNewsPageBundle:PostHasCategoryAdmin
        translation:  SonataNewsBundle
    post_has_media:
        class:        Rz\NewsBundle\Admin\PostHasMediaAdmin
        controller:   SonataAdminBundle:CRUD
        translation:  SonataNewsBundle
    suggested_articles:
        class:        Rz\NewsBundle\Admin\SuggestedArticlesAdmin
        controller:   SonataAdminBundle:CRUD
        translation:  SonataNewsBundle
    related_articles:
        class:        Rz\NewsBundle\Admin\RelatedArticlesAdmin
        controller:   SonataAdminBundle:CRUD
        translation:  SonataNewsBundle

  #=====================================================================
  # Required Default Settings
  #=====================================================================
  slugify_service: 'sonata.core.slugify.cocur' # slugify service for context & collection NOTE: sonata.core.slugify.native is already depricated

  #=====================================================================
  # Bundle Default Settings
  #=====================================================================
  settings:
    related_articles:
      enabled: false
      default_collection: ~
      hide_collection: ~
    suggested_articles:
      enabled: false
      default_collection: ~
      hide_collection: ~
    post_has_media:
      enabled: false
      default_context: ~
      hide_context: ~
      default_category: ~

  #=====================================================================
  # PROVIDERS Configuration
  #   provider are classes that allows programatically adding
  #   new fields on the POST table
  #=====================================================================
  providers:
    #----------------------------------------------------------------------------------------
    # Post Provider
    #----------------------------------------------------------------------------------------
    post:
      #----------------------------------------------------------------------------------------
      # Use context ID from ClassificationBundle
      #----------------------------------------------------------------------------------------
      default_context: 'news' # NOTE: default context used for grouping tag, media, ckeditor_context, collection
      default_collection: 'article' # NOTE: default collection used for grouping provider type
      default_provider_collection: article # NOTE: default provider - provider are classes that allows programatically adding new fields on the POST table
      #----------------------------------------------------------------------------------------
      # use the collection description or slug for collections configuration ID it will be automatically slugified
      #----------------------------------------------------------------------------------------
      collections:
          #----------------------------------------------------------------------------------------
          # SAMPLE COLLECTION SETTINGS
          #   1. Below is a sample settings for the default provider rz.news.post.provider.default.
          #   2. You can declare your own settings based on your provider requirements by following
          #      the "params" pattern of key -> value
          #----------------------------------------------------------------------------------------

          #sample: #-------------------------------------> your collection slug
          #    provider: rz.news.post.provider.sample #--> your provider service
          #    settings: #-------------------------------> settings are the provider parameters
          #        post_has_media:
          #          params:
          #            - { key: enable, value: true }
          #            - { key: context, value: default }
          #            - { key: hide_context, value: true }
          #            - { key: category, value: default }
          #        suggested_articles:
          #          params:
          #            - { key: enable, value: true }
          #            - { key: collection, value: vlog }
          #            - { key: hide_collection, value: false }
          #        related_articles:
          #          params:
          #            - { key: enable, value: true }
          #            - { key: collection, value: vlog }
          #            - { key: hide_collection, value: true }
          #        templates: #----> required for rz.news.post.provider.default
          #          params:
          #            - { key: 'RzNewsPageBundle:Block:block_post.html.twig', value: 'Sample' }
          #            - { key: 'RzNewsPageBundle:Block:block_post_default.html.twig', value: 'Another Sample' }

          article:
              provider: rz.news_page.post.provider.default
              settings:
                  post_has_media:
                    params:
                      - { key: enable, value: true }
                      - { key: context, value: default }
                      - { key: hide_context, value: true }
                      - { key: category, value: default }
                  suggested_articles:
                    params:
                      - { key: enable, value: true }
                      - { key: collection, value: vlog }
                      - { key: hide_collection, value: false }
                  related_articles:
                    params:
                      - { key: enable, value: true }
                      - { key: collection, value: vlog }
                      - { key: hide_collection, value: true }

    #----------------------------------------------------------------------------------------
    # Post Sets Provider
    #----------------------------------------------------------------------------------------
    post_sets:
      #----------------------------------------------------------------------------------------
      # Use context ID from ClassificationBundle
      #----------------------------------------------------------------------------------------
      default_context: post-sets
      default_collection: default
      default_provider_collection: default # NOTE: default provider - provider are classes that allows programatically adding new fields on the POST table
      #default settings for PostSetsHasPost lookup.
      post_lookup_settings:
        default_collection: article
        hide_collection: true
      #optional
      collections:
            default:
                # optional
                post_sets:
                  provider: rz.news.post_sets.provider.default
                  #----------------------------------------------------------------------------------------
                  # Optional! if provider is set and no lookup collection post_lookup_settings.collection
                  #           will automcatically set as post_lookup_settings.collection.
                  #----------------------------------------------------------------------------------------
                  post_lookup_settings: ~
                    #collection: article
                    #hide_collection: true
                # optional
                post_sets_has_posts:
                  provider: ~ # rz.news.post_sets_has_posts.provider.default