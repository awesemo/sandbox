##############################################################################
# CMF Routing
# more information can be found here https://sonata-project.org/bundles/page
##############################################################################
cmf_routing:
    chain:
        routers_by_id:
            # enable the DynamicRouter with high priority to allow overwriting configured routes with content
            #symfony_cmf_routing_extra.dynamic_router: 200
            # enable the symfony default router with a lower priority
            sonata.page.router: 150
            rz.redirect.router: 110
            router.default: 100

##############################################################################
# Sonata Page
##############################################################################
sonata_page:
    class:
        site:     AppBundle\Entity\Page\Site
        snapshot: AppBundle\Entity\Page\Snapshot
        page:     AppBundle\Entity\Page\Page
        block:    AppBundle\Entity\Page\Block

    multisite:             host
    is_inline_edition_on:  false
    use_streamed_response: false # set the value to false in debug mode or if the reverse proxy does not handle streamed response

    ignore_uri_patterns:
        - ^/admin(.*)
        - ^/api/(.*)
        - ^/helper/(.*)

    ignore_route_patterns:
        - (.*)admin(.*)     # ignore admin route, ie route containing 'admin'
        - ^_(.*)            # ignore symfony routes

    slugify_service:      sonata.core.slugify.native

    ignore_routes:
        - sonata_page_cache_esi
        - sonata_page_cache_ssi
        - sonata_page_js_sync_cache
        - sonata_page_js_async_cache
        - sonata_cache_esi
        - sonata_cache_ssi
        - sonata_cache_js_async
        - sonata_cache_js_sync
        - sonata_cache_apc

    cache_invalidation:
        service:  sonata.page.cache.invalidation.simple
        recorder: sonata.page.cache.recorder
        classes:
            "Application\Sonata\PageBundle\Entity\Block": getId

    assets:
        stylesheets:
            - assetic/sonata_front_css.css

        javascripts:
            - assetic/sonata_front_js.js

    default_template: default
    templates:
        default:
            path: 'RzPageBundle:Page:Theme\montage\default.html.twig'
            name: 'default'
            containers:
                 header:
                     name: Header
                     blocks:
                        - sonata.block.service.text
                 content_top:
                     name: Top content
                 content:
                     name: Main content
                 content_bottom:
                     name: Bottom content
                 footer:
                     name: Footer
            matrix:
                 layout: |
                     HHHHHHHH
                     TTTTTTTT
                     CCCCCCCC
                     BBBBBBBB
                     FFFFFFFF

                 mapping:
                     H: header
                     T: content_top
                     C: content
                     B: content_bottom
                     F: footer

        post:
            path: 'RzPageBundle:Page:Theme\montage\post_default.html.twig'
            name: 'post'
            containers:
                 header:
                     name: Header
                 content:
                     name: Post content
                     blocks:
                        - rz.news_page.block.service.post
                        - sonata.page.block.shared_block
                 footer:
                     name: Footer
            matrix:
                 layout: |
                     HHHHHHHH
                     CCCCCCCC
                     CCCCCCCC
                     CCCCCCCC
                     FFFFFFFF

                 mapping:
                     H: header
                     C: content
                     F: footer
        category:
            path: 'RzPageBundle:Page:Theme\montage\category_default.html.twig'
            name: 'category'
            containers:
                 header:
                     name: Header
                 content:
                     name: Category post list content
                     blocks:
                        - rz.news_page.block.service.post_list_by_category
                 footer:
                     name: Footer
            matrix:
                 layout: |
                     HHHHHHHH
                     CCCCCCCC
                     CCCCCCCC
                     CCCCCCCC
                     FFFFFFFF

                 mapping:
                     H: header
                     C: content
                     F: footer

        oauth_authorize:
            path: 'RzOAuthServerBundle:Authorize:page_layout.html.twig'
            name: 'OAuth Authorize Page'
            containers:
                 content:
                    name: Content
            matrix:
                 layout: |
                     CCCCCCCC
                     CCCCCCCC
                     CCCCCCCC
                     CCCCCCCC
                     CCCCCCCC

                 mapping:
                     C: content

    page_defaults:
        homepage: { decorate: false, enabled: true }

    caches:
        esi:
            token:    add an unique token here # default is a random value
            version:  3                        # version 3 is the default on debian wheezy ...
            servers:
                # you need to ajust this configuration to match your varnish configuration
                - %sonata_page.varnish.command%
        ssi:
            token:    add an unique token here # default is a random value

    catch_exceptions:
        not_found: [404]    # render 404 page with "not_found" key (name generated: _page_internal_error_{key})
        fatal:     [500]    # so you can use the same page for different http errors or specify specific page for each error


##############################################################################
# Page Doctrine
##############################################################################
# Enable Doctrine to map the provided entities
doctrine:
    orm:
        entity_managers:
            default:
                mappings:
                    SonataPageBundle: ~
                    RzPageBundle: ~
                    RzNewsPageBundle: ~
                    RzCategoryPageBundle: ~

##############################################################################
# Rz Page
##############################################################################
rz_page:
  manager_class:
    orm:
      site:     'Rz\PageBundle\Entity\SiteManager'
      snapshot: 'Rz\PageBundle\Entity\SnapshotManager'
      page:     'Rz\PageBundle\Entity\PageManager'
      block:    'Rz\PageBundle\Entity\BlockManager'

  admin:
    site:
      class:        'Rz\PageBundle\Admin\SiteAdmin'
      controller:   'RzPageBundle:SiteAdmin'
      translation:  'SonataPageBundle'

    snapshot:
      class:        'Rz\PageBundle\Admin\SnapshotAdmin'
      controller:   'RzAdvancePageBundle:SnapshotAdmin'
      translation:  'SonataPageBundle'

    page:
      class:        'Rz\PageBundle\Admin\PageAdmin'
      controller:   'RzPageBundle:PageAdmin'
      translation:  'SonataPageBundle'

    block:
      class:        'Rz\PageBundle\Admin\BlockAdmin'
      controller:   'RzPageBundle:BlockAdmin'
      translation:  'SonataPageBundle'

    shared_block:
      class:        'Rz\PageBundle\Admin\SharedBlockAdmin'
      controller:   'RzPageBundle:BlockAdmin'
      translation:  'SonataPageBundle'

###############################################################################
# RzNewsPage
#   - NewsBundle and PageBundle Bridge
###############################################################################
rz_news_page:
  slugify_service: 'sonata.core.slugify.cocur'
  page:
    #=====================================================================
    # parent URL slug for all posts (canonical)
    #  page will be automatically create when a new post is added
    #=====================================================================
    parent_slug: 'articles'
    #=====================================================================
    # page template for POST page
    #=====================================================================
    templates:
      post:
        name: 'Post'
        template_code: 'post'
    #=====================================================================
    # default transformer to be used when automatically creating POST page
    #=====================================================================
    transformer:
       class:  'Rz\NewsPageBundle\Entity\Transformer'
    #=====================================================================
    # page service for post and post canonical page
    #=====================================================================
    services:
      post:
        service: rz.news_page.page.service.post
      post_canonical:
        service: rz.news_page.page.service.post_canonical
  #=====================================================================
  # block to render the post on page and its canonical
  #  automatically added when the post page is created
  #=====================================================================
  block:
    service: rz.news_page.block.service.post
    template: #default template if no template is set on rz.news.news_page.block.post
        name: Default
        path: RzNewsPageBundle:Block:block_post_default.html.twig

  #=====================================================================
  # Override page service class and name
  #=====================================================================
  page_service:
    post:
      class: Rz\NewsPageBundle\Page\Service\PostPageService
      name: Post
    post_canonical:
      class: Rz\NewsPageBundle\Page\Service\PostCanonicalPageService
      name: Post Canonical

  #=====================================================================
  # Default permalink
  #   permalinks services generates SEO friendly URL for post
  #   article URL: /article/article-slug ---> canonical URL
  #=====================================================================
  permalink:
    default: default
    #=====================================================================
    # News Permalink Configuration
    # define several permalink generators
    #=====================================================================
    permalinks:
        default:  # the default permalink is mandatory
            permalink: rz.news_page.permalink.default
        slug:  # optional permalik can replace default
            permalink: rz.news_page.permalink.slug

  #=====================================================================
  # PROVIDERS Configuration
  #   provider are classes that allows programatically adding
  #   new fields on the POST table
  #=====================================================================
  providers:
    #----------------------------------------------------------------------------------------
    # SEO Provider
    #----------------------------------------------------------------------------------------
    seo:
      default_provider: rz.news_page.provider.seo.default #NOTE: default seo provider additional fields for SEO


###############################################################################
# RzNewsPage
#   - NewsBundle and PageBundle Bridge
###############################################################################
rz_category_page:
  slugify_service: 'sonata.core.slugify.cocur'
  page:
     #=====================================================================
     # page template for CATEGORY page
     #=====================================================================
    templates:
      category:
        name: 'Category'
        template_code: 'category'
    #=====================================================================
    # page service for category and category canonical page
    #=====================================================================
    services:
      category:
        service: rz.category_page.page.service.category
      category_canonical:
        service: rz.category_page.page.service.category_canonical
  #=====================================================================
  # block to render the post list of a category on page
  #  automatically added when the category page is created
  #=====================================================================
  block:
    service: rz.news_page.block.service.post_list_by_category
    template:
        name: Default
        template: RzNewsPageBundle:Block:block_post_list_by_category.html.twig
  #=====================================================================
  # Override page service class and name
  #=====================================================================
  page_service:
    category:
      class: Rz\CategoryPageBundle\Page\Service\CategoryPageService
      name: Category
    category_canonical:
      class: Rz\CategoryPageBundle\Page\Service\CategoryCanonicalPageService
      name: Category Canonical



###############################################################################
# RzAdvancePage
#   - PageBundle Extension
###############################################################################
rz_advance_page:
  class:
    #----------------------------------------------------------------------------------------
    # Default Model Processor for Post Page Search can be overriden
    #----------------------------------------------------------------------------------------
    processor: 'Rz\AdvancePageBundle\Processor\Model\NewsPageProcessor'

  #----------------------------------------------------------------------------------------
  # Consumer Class override
  #----------------------------------------------------------------------------------------
  consumer_class:
    create_snapshot: 'Rz\AdvancePageBundle\Consumer\CreateSnapshotConsumer'

  settings:
    #=====================================================================
    # page search settings
    #=====================================================================
    search:
      #----------------------------------------------------------------------------------------
      # Processor to be used for indexing Post Pages during snapshots
      #----------------------------------------------------------------------------------------
      processor:
        service: rz_advance_page.processor.model.news_page
      #----------------------------------------------------------------------------------------
      # Search config model indentifier defined on rz_search.yml
      #----------------------------------------------------------------------------------------
      config:
        identifier: sonata.page.snapshot